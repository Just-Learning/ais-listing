[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "ais-listing"
version = "0.1.0"
description = "Advanced AI-powered real estate listing analysis using embeddings, NLP, and machine learning"
authors = [
    {name = "Your Name", email = "your.email@example.com"},
]
readme = "README.md"
requires-python = ">=3.9"
keywords = ["real-estate", "nlp", "ai", "machine-learning", "embeddings", "property-analysis"]
license = {text = "MIT"}
homepage = "https://github.com/yourusername/ais-listing"
repository = "https://github.com/yourusername/ais-listing"
documentation = "https://github.com/yourusername/ais-listing#readme"
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "Intended Audience :: Financial and Insurance Industry",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Scientific/Engineering :: Information Analysis",
    "Topic :: Text Processing :: Linguistic",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Database",
    "Topic :: Internet :: WWW/HTTP :: Dynamic Content",
    "Topic :: Office/Business :: Financial",
]
dependencies = [
    # Core data processing
    "pandas>=2.0.0",
    "numpy>=1.24.0",
    # NLP libraries
    "nltk>=3.8",
    "spacy>=3.7.0",
    "textblob>=0.17.0",
    "wordcloud>=1.9.0",
    # AI/ML and Transformers
    "sentence-transformers>=2.2.0",
    "transformers>=4.30.0",
    "torch>=2.0.0",
    "accelerate>=0.20.0",  # For transformers optimization
    "tokenizers>=0.13.0",  # For tokenization
    # Machine learning
    "scikit-learn>=1.3.0",
    # Vector database and similarity search
    "faiss-cpu>=1.7.0",
    "chromadb>=0.4.0",
    # Data visualization
    "matplotlib>=3.7.0",
    "seaborn>=0.12.0",
    "plotly>=5.15.0",
    # Web scraping (if needed for data collection)
    "requests>=2.31.0",
    "beautifulsoup4>=4.12.0",
    "selenium>=4.10.0",
    # Configuration and utilities
    "python-dotenv>=1.0.0",
    "pydantic>=2.0.0",
    "click>=8.1.0",
    # Jupyter for analysis
    "jupyter>=1.0.0",
    "ipykernel>=6.25.0",
    # Additional utilities
    "pickle5>=0.0.11; python_version < '3.8'",  # For pickle compatibility
    "pathlib2>=2.3.0; python_version < '3.4'",  # For pathlib compatibility
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.5.0",
    "pre-commit>=3.3.0",
    "pytest-asyncio>=0.21.0",
    "pytest-mock>=3.11.0",
]

# Optional dependencies for enhanced functionality
extras = [
    "faiss-gpu>=1.7.0",  # GPU version of FAISS for faster similarity search
    "torchvision>=0.15.0",  # For image processing capabilities
    "opencv-python>=4.8.0",  # For image analysis
    "pillow>=10.0.0",  # For image processing
    "tqdm>=4.65.0",  # For progress bars
    "rich>=13.0.0",  # For enhanced terminal output
    "typer>=0.9.0",  # Alternative to click for CLI
]

# Dependencies for production deployment
prod = [
    "gunicorn>=21.0.0",  # WSGI server
    "uvicorn>=0.23.0",  # ASGI server
    "fastapi>=0.100.0",  # Web framework
    "pydantic[email]>=2.0.0",  # Enhanced validation
    "redis>=4.6.0",  # Caching and session storage
    "celery>=5.3.0",  # Task queue
]

[project.scripts]
ais-listing = "ais_listing.cli:main"

[tool.hatch.build.targets.wheel]
packages = ["src/ais_listing"]

[tool.black]
line-length = 88
target-version = ['py39']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=src",
    "--cov-report=term-missing",
    "--cov-report=html",
] 
